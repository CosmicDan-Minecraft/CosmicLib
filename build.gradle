/*
 * Based on Mantle (SlimeKnights) master build file (which is based on TConstruct's master build file)
 * Credits: Sunstrike, ProgWML6, AbrarSyed, CosmicDan
 */

buildscript {
    repositories {
        jcenter()
        maven { url = "http://files.minecraftforge.net/maven" }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
    }
}

plugins {
	id 'io.franzbecker.gradle-lombok' version '1.10'
}

apply plugin: 'net.minecraftforge.gradle.forge'

ext.configFile = file "build.properties"
configFile.withReader {
    // Load config.  It shall from now be referenced as simply config or project.config
    def prop = new Properties()
    prop.load(it)
    project.ext.config = new ConfigSlurper().parse prop
}

group = "${config.group}"

// sets version to the slimeKnights default version format
// Finds and sets version data
task buildInfo {
    def cmd = "git rev-parse --short HEAD"
    def proc = cmd.execute()
    proc.waitFor()
    if (proc.exitValue() == 0) {
        ext.revision = proc.text.trim()
    } else {
        ext.revision = "GITBORK"
    }

    ext.buildNum = "testbuild.${project.buildInfo.revision}"
}

ext.artifact_version = 'NFG'
ext.cosmicmod_releasemode = System.getenv("COSMICMOD_RELEASEMODE")
if ("${cosmicmod_releasemode}" != "null") {
	if ("${cosmicmod_releasemode}" == "RELEASE")
		artifact_version = "${config.mod_version}.${config.mod_version_revision}"
	else
		artifact_version = "${config.mod_version}.${config.mod_version_revision}.${cosmicmod_releasemode}"
} else
	artifact_version = "${config.mod_version}.${config.mod_version_revision}.${project.buildInfo.buildNum}"
version = "${config.minecraft_version}-${artifact_version}"

task incrementBuildnumber(type:Copy){
	if ("${cosmicmod_releasemode}" != "null") {
		ant.propertyfile(file: configFile) {
			entry(key: 'mod_version_revision', type: 'int', operation: '+', value: 001)
		}
	}
}
compileJava.dependsOn incrementBuildnumber

sourceCompatibility = targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.
compileJava {
    sourceCompatibility = targetCompatibility = '1.8'
}

minecraft {
    version = config.forge_version
    runDir = "run"
    replace "${version}", project.version
    mappings = config.mappings
    // makeObfSourceJar = false // an Srg named sources jar is made by default. uncomment this to disable.
}

dependencies {
	compileOnly "org.projectlombok:lombok:1.16.18"
	testCompile "junit:junit:4.12"
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

jar {
    manifest {
        // AT's here
    }
    finalizedBy reobfJar
}

// Create deobf dev jars
task deobfJar(type: Jar) {
    from sourceSets.main.output
    classifier = 'deobf'
	manifest {
        // AT's here
    }
}

task sourcesJar(type: Jar) {
    from sourceSets.main.allJava
    classifier = 'sources'
}

artifacts {
    archives deobfJar
    archives sourcesJar
}

lombok {
	version = "1.16.18"
	sha256 = ""
}
